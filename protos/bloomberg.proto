// colorscheme retrobox light

syntax = "proto3";


package bloomberg;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

// Key management
service KeyManager {
  rpc requestKey (KeyRequestId) returns (KeyResponse) {}
  rpc sayHello (HelloRequest) returns (stream HelloReply) {}
  rpc sum (SumRequest) returns (SumResponse) {}
}

// Bloomberg API session management
service SessionManager {
  // basic examples TODO delete later
  rpc sayHello (HelloRequest) returns (stream HelloReply) {}
  rpc sum (SumRequest) returns (SumResponse) {}

  // Bloomberg
  rpc getDefaultOptions (google.protobuf.Empty) returns (SessionOptions) {}
  rpc openSession (SessionOptions) returns (Session) {}
  rpc subscribe (Session) returns (Session) {} 
  rpc sessionInfo (Session) returns (Session) {}
  rpc unsubscribe (Session) returns (Session) {}
  rpc closeSession (Session) returns (Session) {}
  rpc historicalDataRequest (HistoricalDataRequest) returns (HistoricalDataResponse) {}
  //rpc intradayTickRequest. maybe "tick" or "gblpTick"
  //rpc intradayBarRequest maybe "bar"
  //rpc historicalDataRequest "daily"
  //rpc referenceDataRequest "ref"
}

// The request message containing the user's name and how many greetings
// they want.
message SessionOptions {
  string name = 1;
  int32 interval = 2; // subscription interval in seconds
  int32 maxEventQueueSize = 3; // event queue size
  string error = 4;
}

message Session {
    message SubscriptionList {
      repeated string topics = 1;
      repeated string fields = 2;
      int32 interval = 3;
    }
  string name = 1;
  repeated string services = 2;
  SubscriptionList subscriptionList = 3;
  bool alive = 4;
  string error = 5;
}

message HistoricalDataRequest {
  Session session = 1;
  repeated string topics = 2; // securities
  repeated string fields = 3; // fields list
  google.protobuf.Timestamp start = 4; // startDate
  google.protobuf.Timestamp end = 5; // endDate
  map <string, string> options = 6; // overrides
}

message HistoricalDataResponse {
  string name = 1;
  // must have
  google.protobuf.Struct json_data = 2; // Field to store arbitrary JSON
  string error = 3;
}

message KeyRequestId {
  string id = 1;
}

message KeyResponse {
  bytes key = 1;
  bytes cert = 2;
  bytes cacert = 3;
  string error = 4;
}


// examples TODO delete later

message HelloRequest {
  string name = 1;
  string num_greetings = 2;
}

// A response message containing a greeting
message HelloReply {
  string message = 1;
}

message SumRequest {
  int32 num1 = 1;
  int32 num2 = 2;
}

message SumResponse {
  int32 result = 1;
}


